'use client'

import { Ionicons } from '@expo/vector-icons'
import { Image } from 'expo-image'
import { LinearGradient } from 'expo-linear-gradient'
import { useRouter } from 'expo-router'
import React, { useEffect, useState } from 'react'
import {
    Dimensions,
    SafeAreaView,
    ScrollView,
    StyleSheet,
    Text,
    TouchableOpacity,
    View,
} from 'react-native'
import Animated, {
    useAnimatedStyle,
    useSharedValue,
    withDelay,
    withSequence,
    withSpring,
    withTiming
} from 'react-native-reanimated'

const { width, height } = Dimensions.get('window')

const MOOD_DATA = {
   Energetic: {
      title: 'NƒÉng ƒê·ªông & ƒêam M√™',
      subtitle: '‚ö° B·∫°n ƒëang tr√†n ƒë·∫ßy nƒÉng l∆∞·ª£ng!',
      description: 'T√¢m tr·∫°ng c·ªßa b·∫°n th·∫≠t tuy·ªát v·ªùi! B·∫°n ƒëang s·∫µn s√†ng cho nh·ªØng th·ª≠ th√°ch m·ªõi v√† tr√†n ƒë·∫ßy nhi·ªát huy·∫øt. H√£y th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn ƒë·∫≠m ƒë√† ƒë·ªÉ duy tr√¨ nƒÉng l∆∞·ª£ng n√†y nh√©!',
      emoji: '‚ö°',
      color: '#FF1744',
      gradient: ['#FF1744', '#FF5722', '#FF9800'],
      foods: [
         {
            name: 'Ph·ªü B√≤',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['N√≥ng', 'ƒê·∫≠m ƒë√†', 'NƒÉng l∆∞·ª£ng'],
            rating: 4.8,
            price: '35k-50k',
            distance: '0.5km',
         },
         {
            name: 'B√∫n Ch·∫£ H√† N·ªôi',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['N∆∞·ªõng', 'Th·ªãt', 'ƒê·∫≠m ƒë√†'],
            rating: 4.6,
            price: '40k-60k',
            distance: '1.2km',
         },
         {
            name: 'C∆°m T·∫•m S√†i G√≤n',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['C∆°m', 'Th·ªãt', 'ƒê·∫ßy ƒë·ªß'],
            rating: 4.7,
            price: '30k-45k',
            distance: '0.8km',
         },
         {
            name: 'B√∫n B√≤ Hu·∫ø',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['Cay', 'ƒê·∫≠m ƒë√†', 'ƒê·∫∑c tr∆∞ng'],
            rating: 4.9,
            price: '45k-65k',
            distance: '1.5km',
         },
         {
            name: 'B√°nh M√¨ Th·ªãt N∆∞·ªõng',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['Nhanh', 'Ngon', 'Ti·ªán l·ª£i'],
            rating: 4.5,
            price: '25k-35k',
            distance: '0.3km',
         },
         {
            name: 'G·ªèi Cu·ªën T√¥m Th·ªãt',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['T∆∞∆°i', 'Nh·∫π', 'L√†nh m·∫°nh'],
            rating: 4.7,
            price: '30k-45k',
            distance: '0.9km',
         },
         {
            name: 'Ch√® Ba M√†u',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['Ng·ªçt', 'M√†u s·∫Øc', 'Vui m·∫Øt'],
            rating: 4.6,
            price: '15k-25k',
            distance: '0.7km',
         },
         {
            name: 'B√°nh Tr√°ng N∆∞·ªõng',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['ƒê·ªôc ƒë√°o', 'Gi√≤n', 'Nhi·ªÅu topping'],
            rating: 4.4,
            price: '20k-30k',
            distance: '1.1km',
         },
      ],
      recommendations: [
         'N√™n ƒÉn v√†o bu·ªïi s√°ng ƒë·ªÉ c√≥ nƒÉng l∆∞·ª£ng c·∫£ ng√†y',
         'K·∫øt h·ª£p v·ªõi tr√† ƒë√° ƒë·ªÉ c√¢n b·∫±ng',
         'Chia s·∫ª v·ªõi b·∫°n b√® ƒë·ªÉ tƒÉng ni·ªÅm vui'
      ]
   },
   Calm: {
      title: 'B√¨nh Y√™n & Tƒ©nh L·∫∑ng',
      subtitle: 'üåä T√¢m h·ªìn thanh th·∫£n',
      description: 'T√¢m tr·∫°ng c·ªßa b·∫°n th·∫≠t thanh th·∫£n v√† b√¨nh y√™n. ƒê√¢y l√† th·ªùi ƒëi·ªÉm ho√†n h·∫£o ƒë·ªÉ th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn nh·∫π nh√†ng v√† t·∫≠n h∆∞·ªüng kho·∫£nh kh·∫Øc y√™n b√¨nh.',
      emoji: 'üåä',
      color: '#1976D2',
      gradient: ['#1976D2', '#42A5F5', '#81C784'],
      foods: [
         {
            name: 'Ch√® H·∫°t Sen Long Nh√£n',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['Ng·ªçt', 'Nh·∫π', 'Thanh m√°t'],
            rating: 4.9,
            price: '25k-35k',
            distance: '0.3km',
         },
         {
            name: 'B√°nh Flan Caramen',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['Tr√°ng mi·ªáng', 'M·ªÅm', 'Ng·ªçt'],
            rating: 4.5,
            price: '15k-25k',
            distance: '0.6km',
         },
         {
            name: 'Tr√† S·ªØa Matcha',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['U·ªëng', 'Ng·ªçt', 'M√°t'],
            rating: 4.7,
            price: '35k-50k',
            distance: '1.0km',
         },
      ],
      recommendations: [
         'Th∆∞·ªüng th·ª©c trong kh√¥ng gian y√™n tƒ©nh',
         'K·∫øt h·ª£p v·ªõi √¢m nh·∫°c nh·∫π nh√†ng',
         'ƒÇn ch·∫≠m ƒë·ªÉ c·∫£m nh·∫≠n h∆∞∆°ng v·ªã'
      ]
   },
   Happy: {
      title: 'Vui V·∫ª & L·∫°c Quan',
      subtitle: 'üòä Ni·ªÅm vui tr√†n ng·∫≠p',
      description: 'T√¢m tr·∫°ng tuy·ªát v·ªùi! B·∫°n ƒëang tr√†n ng·∫≠p ni·ªÅm vui v√† l·∫°c quan. H√£y ƒÉn nh·ªØng m√≥n ngon ƒë·ªÉ duy tr√¨ ni·ªÅm vui v√† chia s·∫ª h·∫°nh ph√∫c v·ªõi m·ªçi ng∆∞·ªùi xung quanh.',
      emoji: 'üòä',
      color: '#FBC02D',
      gradient: ['#FBC02D', '#FFB74D', '#FF8A65'],
      foods: [
         {
            name: 'B√°nh M√¨ Th·ªãt N∆∞·ªõng',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['Nhanh', 'Ngon', 'Ti·ªán l·ª£i'],
            rating: 4.8,
            price: '20k-30k',
            distance: '0.4km',
         },
         {
            name: 'G·ªèi Cu·ªën T√¥m Th·ªãt',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['T∆∞∆°i', 'Nh·∫π', 'L√†nh m·∫°nh'],
            rating: 4.6,
            price: '25k-35k',
            distance: '0.7km',
         },
         {
            name: 'Ch√® Ba M√†u',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['Ng·ªçt', 'M√†u s·∫Øc', 'Vui m·∫Øt'],
            rating: 4.7,
            price: '15k-25k',
            distance: '0.9km',
         },
      ],
      recommendations: [
         'Chia s·∫ª v·ªõi b·∫°n b√® ƒë·ªÉ tƒÉng ni·ªÅm vui',
         'Ch·ª•p ·∫£nh ƒë·ªÉ l∆∞u gi·ªØ kho·∫£nh kh·∫Øc',
         'Th∆∞·ªüng th·ª©c ngo√†i tr·ªùi n·∫øu c√≥ th·ªÉ'
      ]
   },
   Creative: {
      title: 'S√°ng T·∫°o & ƒê·ªôc ƒê√°o',
      subtitle: 'üé® Tr√≠ t∆∞·ªüng t∆∞·ª£ng bay cao',
      description: 'T√¢m tr·∫°ng s√°ng t·∫°o! B·∫°n ƒëang c√≥ nh·ªØng √Ω t∆∞·ªüng ƒë·ªôc ƒë√°o v√† tr√≠ t∆∞·ªüng t∆∞·ª£ng phong ph√∫. H√£y th·ª≠ nh·ªØng m√≥n ƒÉn m·ªõi l·∫° ƒë·ªÉ k√≠ch th√≠ch s·ª± s√°ng t·∫°o.',
      emoji: 'üé®',
      color: '#7B1FA2',
      gradient: ['#7B1FA2', '#9C27B0', '#E91E63'],
      foods: [
         {
            name: 'B√°nh Tr√°ng N∆∞·ªõng ƒê·∫∑c Bi·ªát',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['ƒê·ªôc ƒë√°o', 'Gi√≤n', 'Nhi·ªÅu topping'],
            rating: 4.9,
            price: '30k-45k',
            distance: '0.6km',
         },
         {
            name: 'B√∫n B√≤ Hu·∫ø Cay',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['Cay', 'ƒê·∫≠m ƒë√†', 'ƒê·∫∑c tr∆∞ng'],
            rating: 4.8,
            price: '40k-55k',
            distance: '1.1km',
         },
         {
            name: 'Ch√® S·∫ßu Ri√™ng',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['ƒê·∫∑c bi·ªát', 'Ng·ªçt', 'H∆∞∆°ng v·ªã ri√™ng'],
            rating: 4.5,
            price: '25k-35k',
            distance: '0.8km',
         },
      ],
      recommendations: [
         'Th·ª≠ m√≥n m·ªõi ƒë·ªÉ k√≠ch th√≠ch s√°ng t·∫°o',
         'Ghi ch√©p l·∫°i c·∫£m nh·∫≠n v·ªÅ m√≥n ƒÉn',
         'Chia s·∫ª tr·∫£i nghi·ªám v·ªõi b·∫°n b√®'
      ]
   },
   Balanced: {
      title: 'C√¢n B·∫±ng & H√†i H√≤a',
      subtitle: '‚öñÔ∏è S·ª± c√¢n b·∫±ng ho√†n h·∫£o',
      description: 'T√¢m tr·∫°ng c√¢n b·∫±ng! B·∫°n ƒëang c√≥ s·ª± h√†i h√≤a tuy·ªát v·ªùi gi·ªØa th·ªÉ ch·∫•t v√† tinh th·∫ßn. H√£y th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn ƒë·∫ßy ƒë·ªß dinh d∆∞·ª°ng ƒë·ªÉ duy tr√¨ s·ª± c√¢n b·∫±ng n√†y.',
      emoji: '‚öñÔ∏è',
      color: '#388E3C',
      gradient: ['#388E3C', '#66BB6A', '#81C784'],
      foods: [
         {
            name: 'C∆°m G√† X·ªëi M·ª°',
            image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400',
            tags: ['C√¢n b·∫±ng', 'Dinh d∆∞·ª°ng', 'L√†nh m·∫°nh'],
            rating: 4.7,
            price: '35k-50k',
            distance: '0.5km',
         },
         {
            name: 'Canh Chua C√° L√≥c',
            image: 'https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=400',
            tags: ['Chua', 'T∆∞∆°i', 'Nhi·ªÅu rau'],
            rating: 4.6,
            price: '45k-60k',
            distance: '1.3km',
         },
         {
            name: 'S·ªØa Chua Hy L·∫°p',
            image: 'https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=400',
            tags: ['T·ªët cho ti√™u h√≥a', 'M√°t', 'B·ªï d∆∞·ª°ng'],
            rating: 4.8,
            price: '20k-30k',
            distance: '0.4km',
         },
      ],
      recommendations: [
         'ƒÇn ƒë√∫ng gi·ªù ƒë·ªÉ duy tr√¨ nh·ªãp sinh h·ªçc',
         'K·∫øt h·ª£p rau xanh v√† protein',
         'U·ªëng ƒë·ªß n∆∞·ªõc trong ng√†y'
      ]
   },
}

export default function MoodResultsPage() {
   const router = useRouter()
   const [showAllFoods, setShowAllFoods] = useState(false)
   const cardScale = useSharedValue(0.8)
   const cardOpacity = useSharedValue(0)
   const headerTranslateY = useSharedValue(-50)
   const foodItemsTranslateY = useSharedValue(100)
   const buttonScale = useSharedValue(0.9)

   useEffect(() => {
      // Header animation
      headerTranslateY.value = withSpring(0, { damping: 15, stiffness: 100 })
      
      // Card animation
      cardScale.value = withSpring(1, { damping: 15, stiffness: 100 })
      cardOpacity.value = withTiming(1, { duration: 800 })
      
      // Food items animation
      foodItemsTranslateY.value = withDelay(300, withSpring(0, { damping: 15, stiffness: 100 }))
      
      // Button animation
      buttonScale.value = withDelay(600, withSpring(1, { damping: 15, stiffness: 100 }))
   }, [])

   const animatedCardStyle = useAnimatedStyle(() => ({
      transform: [{ scale: cardScale.value }],
      opacity: cardOpacity.value,
   }))

   const animatedHeaderStyle = useAnimatedStyle(() => ({
      transform: [{ translateY: headerTranslateY.value }],
   }))

   const animatedFoodStyle = useAnimatedStyle(() => ({
      transform: [{ translateY: foodItemsTranslateY.value }],
   }))

   const animatedButtonStyle = useAnimatedStyle(() => ({
      transform: [{ scale: buttonScale.value }],
   }))

   // Mock data - trong th·ª±c t·∫ø s·∫Ω l·∫•y t·ª´ context ho·∫∑c params
   const mood = 'Energetic'
   const selectedColors = ['red', 'orange']
   const moodInfo = MOOD_DATA[mood as keyof typeof MOOD_DATA]

   const handleMapPress = () => {
      // Animate button press
      buttonScale.value = withSequence(
         withSpring(0.95, { duration: 100 }),
         withSpring(1, { duration: 100 })
      )
      
      // Navigate to map with mood filter and restaurant coordinates
      const restaurantData = {
         mood: mood.toLowerCase(),
         restaurants: [
            { name: 'Ph·ªü B√≤', lat: 10.5747230, lng: 107.0554590 },
            { name: 'B√∫n Ch·∫£ H√† N·ªôi', lat: 10.7858351, lng: 106.6995019 },
            { name: 'C∆°m T·∫•m S√†i G√≤n', lat: 10.7609741, lng: 106.6314602 }
         ]
      }
      
      setTimeout(() => {
         router.push({
            pathname: '/map',
            params: { 
               mood: mood.toLowerCase(),
               restaurants: JSON.stringify(restaurantData.restaurants)
            }
         })
      }, 200)
   }

   return (
      <SafeAreaView style={styles.container}>
         {/* Animated Header */}
         <Animated.View style={[styles.header, animatedHeaderStyle]}>
            <TouchableOpacity onPress={() => router.back()} style={styles.backButton}>
               <Ionicons name="arrow-back" size={24} color="#6B7280" />
            </TouchableOpacity>
            <View style={styles.headerCenter}>
               <Text style={styles.headerTitle}>K·∫øt Qu·∫£ Mood</Text>
               <Text style={styles.headerSubtitle}>Kh√°m ph√° t√¢m tr·∫°ng c·ªßa b·∫°n</Text>
            </View>
            <TouchableOpacity style={styles.shareButton}>
               <Ionicons name="share-outline" size={24} color="#6B7280" />
            </TouchableOpacity>
         </Animated.View>

         <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
            {/* Mood Result Card with Gradient */}
            <Animated.View style={[styles.moodCard, animatedCardStyle]}>
               <LinearGradient
                  colors={moodInfo.gradient}
                  start={{ x: 0, y: 0 }}
                  end={{ x: 1, y: 1 }}
                  style={styles.moodHeader}
               >
                  <View style={styles.moodEmojiContainer}>
                     <Text style={styles.moodEmoji}>{moodInfo.emoji}</Text>
                  </View>
                  <Text style={styles.moodTitle}>{moodInfo.title}</Text>
                  <Text style={styles.moodSubtitle}>{moodInfo.subtitle}</Text>
                  <Text style={styles.moodDescription}>{moodInfo.description}</Text>
                  
                  {/* Mood Stats */}
                  <View style={styles.moodStats}>
                     <View style={styles.statItem}>
                        <Text style={styles.statNumber}>95%</Text>
                        <Text style={styles.statLabel}>T∆∞∆°ng th√≠ch</Text>
                     </View>
                     <View style={styles.statDivider} />
                     <View style={styles.statItem}>
                        <Text style={styles.statNumber}>{selectedColors.length}</Text>
                        <Text style={styles.statLabel}>M√†u ch·ªçn</Text>
                     </View>
                     <View style={styles.statDivider} />
                     <View style={styles.statItem}>
                        <Text style={styles.statNumber}>3</Text>
                        <Text style={styles.statLabel}>G·ª£i √Ω</Text>
                     </View>
                  </View>
               </LinearGradient>

               {/* Selected Colors with Animation */}
               <View style={styles.colorsSection}>
                  <Text style={styles.sectionTitle}>üé® M√†u s·∫Øc b·∫°n ƒë√£ ch·ªçn</Text>
                  <View style={styles.selectedColorsContainer}>
                     {selectedColors.map((colorId, index) => (
                        <View key={colorId} style={styles.colorDot}>
                           <View
                              style={[
                                 styles.colorCircle,
                                 { backgroundColor: getColorById(colorId) },
                              ]}
                           />
                           <Text style={styles.colorName}>{getColorName(colorId)}</Text>
                        </View>
                     ))}
                  </View>
               </View>

               {/* Food Recommendations */}
               <Animated.View style={[styles.foodSection, animatedFoodStyle]}>
                  <View style={styles.sectionHeader}>
                     <View style={styles.sectionTitleContainer}>
                        <Text style={styles.sectionTitle}>üçΩÔ∏è G·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p</Text>
                     </View>
                     <TouchableOpacity 
                        style={styles.viewAllButton}
                        onPress={() => setShowAllFoods(!showAllFoods)}
                     >
                        <Text style={styles.viewAllText}>
                           {showAllFoods ? 'Thu g·ªçn' : 'Xem t·∫•t c·∫£'}
                        </Text>
                        <Ionicons 
                           name={showAllFoods ? "chevron-up" : "chevron-forward"} 
                           size={16} 
                           color="#8B5CF6" 
                        />
                     </TouchableOpacity>
                  </View>
                  
                  {(showAllFoods ? moodInfo.foods : moodInfo.foods.slice(0, 3)).map((food, index) => (
                     <View key={index} style={styles.foodItem}>
                        <Image
                           source={{ uri: food.image }}
                           style={styles.foodImage}
                           contentFit="cover"
                        />
                        <View style={styles.foodInfo}>
                           <View style={styles.foodHeader}>
                              <Text style={styles.foodName}>{food.name}</Text>
                              <View style={styles.ratingContainer}>
                                 <Ionicons name="star" size={14} color="#FFD700" />
                                 <Text style={styles.ratingText}>{food.rating}</Text>
                              </View>
                           </View>
                           
                           <View style={styles.foodTags}>
                              {food.tags.map((tag, tagIndex) => (
                                 <View key={tagIndex} style={styles.tag}>
                                    <Text style={styles.tagText}>{tag}</Text>
                                 </View>
                              ))}
                           </View>
                           
                           <View style={styles.foodMeta}>
                              <View style={styles.metaItem}>
                                 <Ionicons name="cash-outline" size={14} color="#6B7280" />
                                 <Text style={styles.metaText}>{food.price}</Text>
                              </View>
                              <View style={styles.metaItem}>
                                 <Ionicons name="location-outline" size={14} color="#6B7280" />
                                 <Text style={styles.metaText}>{food.distance}</Text>
                              </View>
                           </View>
                        </View>
                        
                        <TouchableOpacity style={styles.orderButton}>
                           <Ionicons name="add" size={20} color="white" />
                        </TouchableOpacity>
                     </View>
                  ))}
               </Animated.View>

               {/* Recommendations */}
               <View style={styles.recommendationsSection}>
                  <Text style={styles.sectionTitle}>üí° L·ªùi khuy√™n cho b·∫°n</Text>
                  {moodInfo.recommendations.map((rec, index) => (
                     <View key={index} style={styles.recommendationItem}>
                        <View style={styles.recommendationIcon}>
                           <Ionicons name="checkmark-circle" size={20} color="#10B981" />
                        </View>
                        <Text style={styles.recommendationText}>{rec}</Text>
                     </View>
                  ))}
               </View>
            </Animated.View>
         </ScrollView>

         {/* Action Buttons */}
         <Animated.View style={[styles.footer, animatedButtonStyle]}>
            <TouchableOpacity
               style={styles.tryAgainButton}
               onPress={() => router.push('/mood/mood-quiz')}
            >
               <Ionicons name="refresh" size={20} color="#8B5CF6" />
               <Text style={styles.tryAgainText}>Th·ª≠ l·∫°i</Text>
            </TouchableOpacity>
            
            <TouchableOpacity
               style={styles.mapButton}
               onPress={handleMapPress}
            >
               <Ionicons name="map" size={20} color="white" />
               <Text style={styles.mapButtonText}>Xem tr√™n b·∫£n ƒë·ªì</Text>
            </TouchableOpacity>
            
            <TouchableOpacity
               style={styles.homeButton}
               onPress={() => router.push('/')}
            >
               <Ionicons name="home" size={20} color="white" />
               <Text style={styles.homeButtonText}>Trang ch·ªß</Text>
            </TouchableOpacity>
         </Animated.View>
      </SafeAreaView>
   )
}

const getColorById = (colorId: string): string => {
   const colorMap: { [key: string]: string } = {
      red: '#FF1744',
      orange: '#FF6F00',
      yellow: '#FBC02D',
      green: '#388E3C',
      blue: '#1976D2',
      purple: '#7B1FA2',
      pink: '#E91E63',
      gray: '#607D8B',
      brown: '#8D6E63',
      teal: '#009688',
      indigo: '#3F51B5',
      rose: '#C2185B',
      lime: '#8BC34A',
      cyan: '#00BCD4',
      amber: '#FF9800',
      emerald: '#4CAF50',
      violet: '#9C27B0',
      fuchsia: '#E91E63',
      slate: '#546E7A',
      zinc: '#757575',
   }
   return colorMap[colorId] || '#6B7280'
}

const getColorName = (colorId: string): string => {
   const nameMap: { [key: string]: string } = {
      red: 'ƒê·ªè',
      orange: 'Cam',
      yellow: 'V√†ng',
      green: 'Xanh l√°',
      blue: 'Xanh d∆∞∆°ng',
      purple: 'T√≠m',
      pink: 'H·ªìng',
      gray: 'X√°m',
      brown: 'N√¢u',
      teal: 'Xanh ng·ªçc',
      indigo: 'Ch√†m',
      rose: 'H·ªìng ƒë·∫≠m',
      lime: 'Lime',
      cyan: 'Cyan',
      amber: 'Amber',
      emerald: 'Emerald',
      violet: 'Violet',
      fuchsia: 'Fuchsia',
      slate: 'Slate',
      zinc: 'Zinc',
   }
   return nameMap[colorId] || 'Unknown'
}

const styles = StyleSheet.create({
   container: {
      flex: 1,
      backgroundColor: '#F9FAFB',
   },
   header: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      paddingHorizontal: 20,
      paddingVertical: 16,
      backgroundColor: '#FFFFFF',
      borderBottomWidth: 1,
      borderBottomColor: '#F3F4F6',
   },
   backButton: {
      padding: 8,
      borderRadius: 20,
      backgroundColor: '#F9FAFB',
   },
   headerCenter: {
      alignItems: 'center',
   },
   headerTitle: {
      fontSize: 18,
      fontWeight: 'bold',
      color: '#111827',
   },
   headerSubtitle: {
      fontSize: 12,
      color: '#6B7280',
      marginTop: 2,
   },
   shareButton: {
      padding: 8,
      borderRadius: 20,
      backgroundColor: '#F9FAFB',
   },
   content: {
      flex: 1,
   },
   moodCard: {
      backgroundColor: '#FFFFFF',
      borderRadius: 20,
      overflow: 'hidden',
      shadowColor: '#000',
      shadowOffset: {
         width: 0,
         height: 4,
      },
      shadowOpacity: 0.1,
      shadowRadius: 8,
      elevation: 8,
      margin: 20,
   },
   moodHeader: {
      padding: 24,
      alignItems: 'center',
   },
   moodEmojiContainer: {
      width: 80,
      height: 80,
      borderRadius: 40,
      backgroundColor: 'rgba(255, 255, 255, 0.2)',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 16,
   },
   moodEmoji: {
      fontSize: 40,
   },
   moodTitle: {
      fontSize: 28,
      fontWeight: 'bold',
      color: '#FFFFFF',
      textAlign: 'center',
      marginBottom: 8,
   },
   moodSubtitle: {
      fontSize: 16,
      color: 'rgba(255, 255, 255, 0.9)',
      textAlign: 'center',
      marginBottom: 12,
   },
   moodDescription: {
      fontSize: 14,
      color: 'rgba(255, 255, 255, 0.8)',
      textAlign: 'center',
      lineHeight: 20,
      marginBottom: 20,
   },
   moodStats: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around',
      width: '100%',
      paddingTop: 16,
      borderTopWidth: 1,
      borderTopColor: 'rgba(255, 255, 255, 0.2)',
   },
   statItem: {
      alignItems: 'center',
   },
   statNumber: {
      fontSize: 20,
      fontWeight: 'bold',
      color: '#FFFFFF',
   },
   statLabel: {
      fontSize: 12,
      color: 'rgba(255, 255, 255, 0.8)',
      marginTop: 2,
   },
   statDivider: {
      width: 1,
      height: 30,
      backgroundColor: 'rgba(255, 255, 255, 0.3)',
   },
   colorsSection: {
      padding: 20,
      borderBottomWidth: 1,
      borderBottomColor: '#F3F4F6',
   },
   sectionTitle: {
      fontSize: 18,
      fontWeight: '600',
      color: '#111827',
      marginBottom: 16,
   },
   selectedColorsContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      gap: 20,
   },
   colorDot: {
      alignItems: 'center',
   },
   colorCircle: {
      width: 40,
      height: 40,
      borderRadius: 20,
      borderWidth: 3,
      borderColor: '#FFFFFF',
      shadowColor: '#000',
      shadowOffset: {
         width: 0,
         height: 2,
      },
      shadowOpacity: 0.1,
      shadowRadius: 4,
      elevation: 2,
      marginBottom: 8,
   },
   colorName: {
      fontSize: 12,
      color: '#6B7280',
      fontWeight: '500',
   },
   foodSection: {
      padding: 20,
   },
   sectionHeader: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      marginBottom: 16,
   },
   sectionTitleContainer: {
      flex: 1,
      alignItems: 'flex-start',
   },
   viewAllButton: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 8,
      paddingHorizontal: 12,
   },
   viewAllText: {
      fontSize: 14,
      color: '#8B5CF6',
      fontWeight: '500',
      marginRight: 4,
   },
   foodItem: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 16,
      borderBottomWidth: 1,
      borderBottomColor: '#F3F4F6',
   },
   foodImage: {
      width: 80,
      height: 80,
      borderRadius: 12,
      marginRight: 16,
   },
   foodInfo: {
      flex: 1,
   },
   foodHeader: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      marginBottom: 8,
   },
   foodName: {
      fontSize: 16,
      fontWeight: '600',
      color: '#111827',
   },
   ratingContainer: {
      flexDirection: 'row',
      alignItems: 'center',
   },
   ratingText: {
      fontSize: 14,
      color: '#6B7280',
      marginLeft: 4,
   },
   foodTags: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      gap: 6,
      marginBottom: 8,
   },
   tag: {
      backgroundColor: '#F3F4F6',
      paddingHorizontal: 8,
      paddingVertical: 4,
      borderRadius: 12,
   },
   tagText: {
      fontSize: 12,
      color: '#6B7280',
      fontWeight: '500',
   },
   foodMeta: {
      flexDirection: 'row',
      gap: 16,
   },
   metaItem: {
      flexDirection: 'row',
      alignItems: 'center',
   },
   metaText: {
      fontSize: 12,
      color: '#6B7280',
      marginLeft: 4,
   },
   orderButton: {
      width: 40,
      height: 40,
      borderRadius: 20,
      backgroundColor: '#8B5CF6',
      justifyContent: 'center',
      alignItems: 'center',
   },
   recommendationsSection: {
      padding: 20,
      backgroundColor: '#F9FAFB',
   },
   recommendationItem: {
      flexDirection: 'row',
      alignItems: 'center',
      marginBottom: 12,
   },
   recommendationIcon: {
      marginRight: 12,
   },
   recommendationText: {
      fontSize: 14,
      color: '#374151',
      lineHeight: 20,
      flex: 1,
   },
   footer: {
      flexDirection: 'row',
      padding: 16,
      gap: 8,
      backgroundColor: '#FFFFFF',
      borderTopWidth: 1,
      borderTopColor: '#F3F4F6',
   },
   tryAgainButton: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#F3F4F6',
      paddingVertical: 12,
      paddingHorizontal: 8,
      borderRadius: 10,
   },
   tryAgainText: {
      fontSize: 12,
      fontWeight: '600',
      color: '#8B5CF6',
      marginLeft: 6,
   },
   mapButton: {
      flex: 1.5,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#8B5CF6',
      paddingVertical: 12,
      paddingHorizontal: 12,
      borderRadius: 10,
   },
   mapButtonText: {
      fontSize: 12,
      fontWeight: '600',
      color: 'white',
      marginLeft: 6,
   },
   homeButton: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#10B981',
      paddingVertical: 12,
      paddingHorizontal: 8,
      borderRadius: 10,
   },
   homeButtonText: {
      fontSize: 12,
      fontWeight: '600',
      color: 'white',
      marginLeft: 6,
   },
}) 