import { Ionicons } from '@expo/vector-icons'
import React from 'react'
import {
    Dimensions,
    Image,
    ScrollView,
    StyleSheet,
    Text,
    TouchableOpacity,
    View,
} from 'react-native'
import Animated, {
    useAnimatedStyle,
    useSharedValue,
    withSpring,
    withTiming,
} from 'react-native-reanimated'

const { width } = Dimensions.get('window')

interface MoodResultsProps {
   selectedColors: string[]
   mood: string
   onClose: () => void
   onTryAgain: () => void
}

const MOOD_DATA = {
   Energetic: {
      title: 'NƒÉng ƒë·ªông & ƒêam m√™',
      description: 'B·∫°n ƒëang tr√†n ƒë·∫ßy nƒÉng l∆∞·ª£ng v√† s·∫µn s√†ng kh√°m ph√°!',
      emoji: '‚ö°',
      color: '#EF4444',
      foods: [
         {
            name: 'Spicy Ramen',
            description: 'M√≥n ƒÉn cay n√≥ng ƒë·ªÉ tƒÉng c∆∞·ªùng nƒÉng l∆∞·ª£ng',
            image: 'https://picsum.photos/id/1025/300/200',
            tags: ['Cay', 'N√≥ng', 'NƒÉng l∆∞·ª£ng'],
         },
         {
            name: 'Vietnamese Pho',
            description: 'Ph·ªü b√≤ truy·ªÅn th·ªëng v·ªõi h∆∞∆°ng v·ªã ƒë·∫≠m ƒë√†',
            image: 'https://picsum.photos/id/1062/300/200',
            tags: ['Truy·ªÅn th·ªëng', 'ƒê·∫≠m ƒë√†', 'N√≥ng'],
         },
         {
            name: 'Korean BBQ',
            description: 'Th·ªãt n∆∞·ªõng H√†n Qu·ªëc v·ªõi nhi·ªÅu gia v·ªã',
            image: 'https://picsum.photos/id/1040/300/200',
            tags: ['N∆∞·ªõng', 'Th·ªãt', 'Gia v·ªã'],
         },
      ],
   },
   Calm: {
      title: 'B√¨nh y√™n & Tƒ©nh l·∫∑ng',
      description: 'B·∫°n ƒëang t√¨m ki·∫øm s·ª± b√¨nh y√™n v√† th∆∞ gi√£n.',
      emoji: 'üåä',
      color: '#3B82F6',
      foods: [
         {
            name: 'Green Tea Smoothie',
            description: 'Smoothie tr√† xanh m√°t l·∫°nh v√† thanh l·ªçc',
            image: 'https://picsum.photos/id/1025/300/200',
            tags: ['Thanh l·ªçc', 'M√°t', 'T·ª± nhi√™n'],
         },
         {
            name: 'Chicken Soup',
            description: 'S√∫p g√† ·∫•m √°p v√† d·ªÖ ti√™u h√≥a',
            image: 'https://picsum.photos/id/1062/300/200',
            tags: ['·∫§m √°p', 'D·ªÖ ti√™u', 'B·ªï d∆∞·ª°ng'],
         },
         {
            name: 'Lavender Latte',
            description: 'C√† ph√™ v·ªõi h∆∞∆°ng o·∫£i h∆∞∆°ng th∆∞ gi√£n',
            image: 'https://picsum.photos/id/1040/300/200',
            tags: ['Th∆∞ gi√£n', 'H∆∞∆°ng th∆°m', 'C√† ph√™'],
         },
      ],
   },
   Happy: {
      title: 'Vui v·∫ª & L·∫°c quan',
      description: 'B·∫°n ƒëang trong t√¢m tr·∫°ng tuy·ªát v·ªùi v√† mu·ªën ƒÉn m·ª´ng!',
      emoji: 'üåà',
      color: '#EAB308',
      foods: [
         {
            name: 'Rainbow Cake',
            description: 'B√°nh kem c·∫ßu v·ªìng ƒë·∫ßy m√†u s·∫Øc v√† ni·ªÅm vui',
            image: 'https://picsum.photos/id/1025/300/200',
            tags: ['Ng·ªçt', 'M√†u s·∫Øc', 'Vui v·∫ª'],
         },
         {
            name: 'Fruit Smoothie Bowl',
            description: 'Bowl smoothie tr√°i c√¢y t∆∞∆°i m√°t',
            image: 'https://picsum.photos/id/1062/300/200',
            tags: ['T∆∞∆°i m√°t', 'Tr√°i c√¢y', 'Kh·ªèe m·∫°nh'],
         },
         {
            name: 'Pizza Margherita',
            description: 'Pizza √ù truy·ªÅn th·ªëng v·ªõi ph√¥ mai b√©o ng·∫≠y',
            image: 'https://picsum.photos/id/1040/300/200',
            tags: ['Ph√¥ mai', 'N∆∞·ªõng', '√ù'],
         },
      ],
   },
   Creative: {
      title: 'S√°ng t·∫°o & Ngh·ªá thu·∫≠t',
      description: 'B·∫°n ƒëang trong t√¢m tr·∫°ng s√°ng t·∫°o v√† mu·ªën kh√°m ph√°!',
      emoji: 'üé®',
      color: '#8B5CF6',
      foods: [
         {
            name: 'Sushi Art',
            description: 'Sushi ƒë∆∞·ª£c tr√¨nh b√†y nh∆∞ t√°c ph·∫©m ngh·ªá thu·∫≠t',
            image: 'https://picsum.photos/id/1025/300/200',
            tags: ['Ngh·ªá thu·∫≠t', 'T∆∞∆°i', 'Nh·∫≠t B·∫£n'],
         },
         {
            name: 'Molecular Gastronomy',
            description: '·∫®m th·ª±c ph√¢n t·ª≠ v·ªõi k·ªπ thu·∫≠t hi·ªán ƒë·∫°i',
            image: 'https://picsum.photos/id/1062/300/200',
            tags: ['Hi·ªán ƒë·∫°i', 'K·ªπ thu·∫≠t', 'ƒê·ªôc ƒë√°o'],
         },
         {
            name: 'Fusion Cuisine',
            description: 'M√≥n ƒÉn k·∫øt h·ª£p nhi·ªÅu n·ªÅn vƒÉn h√≥a',
            image: 'https://picsum.photos/id/1040/300/200',
            tags: ['K·∫øt h·ª£p', 'ƒêa vƒÉn h√≥a', 'M·ªõi l·∫°'],
         },
      ],
   },
   Balanced: {
      title: 'C√¢n b·∫±ng & H√†i h√≤a',
      description: 'B·∫°n ƒëang t√¨m ki·∫øm s·ª± c√¢n b·∫±ng trong cu·ªôc s·ªëng.',
      emoji: '‚öñÔ∏è',
      color: '#6B7280',
      foods: [
         {
            name: 'Buddha Bowl',
            description: 'Bowl c√¢n b·∫±ng v·ªõi rau, protein v√† ng≈© c·ªëc',
            image: 'https://picsum.photos/id/1025/300/200',
            tags: ['C√¢n b·∫±ng', 'Kh·ªèe m·∫°nh', 'ƒê·∫ßy ƒë·ªß'],
         },
         {
            name: 'Mediterranean Salad',
            description: 'Salad ƒê·ªãa Trung H·∫£i v·ªõi d·∫ßu olive',
            image: 'https://picsum.photos/id/1062/300/200',
            tags: ['T∆∞∆°i', 'D·∫ßu olive', 'ƒê·ªãa Trung H·∫£i'],
         },
         {
            name: 'Quinoa Bowl',
            description: 'Bowl quinoa v·ªõi rau v√† protein n·∫°c',
            image: 'https://picsum.photos/id/1040/300/200',
            tags: ['Protein', 'Ng≈© c·ªëc', 'Rau'],
         },
      ],
   },
}

export const MoodResults: React.FC<MoodResultsProps> = ({
   selectedColors,
   mood,
   onClose,
   onTryAgain,
}) => {
   const containerOpacity = useSharedValue(0)
   const containerScale = useSharedValue(0.9)
   const cardTranslateY = useSharedValue(50)

   React.useEffect(() => {
      containerOpacity.value = withTiming(1, { duration: 500 })
      containerScale.value = withSpring(1, { damping: 15, stiffness: 100 })
      cardTranslateY.value = withSpring(0, { damping: 15, stiffness: 100 })
   }, [])

   const animatedContainerStyle = useAnimatedStyle(() => ({
      opacity: containerOpacity.value,
      transform: [{ scale: containerScale.value }],
   }))

   const animatedCardStyle = useAnimatedStyle(() => ({
      transform: [{ translateY: cardTranslateY.value }],
   }))

   const moodData = MOOD_DATA[mood as keyof typeof MOOD_DATA] || MOOD_DATA.Balanced

   return (
      <View style={styles.container}>
         <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
            <Animated.View style={[styles.content, animatedContainerStyle]}>
               {/* Header */}
               <View style={styles.header}>
                  <Text style={styles.headerTitle}>K·∫øt qu·∫£ ph√¢n t√≠ch</Text>
                  <Text style={styles.headerSubtitle}>
                     D·ª±a tr√™n {selectedColors.length} m√†u s·∫Øc b·∫°n ƒë√£ ch·ªçn
                  </Text>
               </View>

               {/* Mood Result */}
               <Animated.View style={[styles.moodCard, animatedCardStyle]}>
                  <View style={[styles.moodIcon, { backgroundColor: moodData.color }]}>
                     <Text style={styles.moodEmoji}>{moodData.emoji}</Text>
                  </View>
                  <Text style={styles.moodTitle}>{moodData.title}</Text>
                  <Text style={styles.moodDescription}>{moodData.description}</Text>
               </Animated.View>

               {/* Food Recommendations */}
               <View style={styles.recommendationsSection}>
                  <Text style={styles.sectionTitle}>G·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p</Text>
                  <Text style={styles.sectionSubtitle}>
                     Nh·ªØng m√≥n ƒÉn n√†y s·∫Ω ph√π h·ª£p v·ªõi t√¢m tr·∫°ng hi·ªán t·∫°i c·ªßa b·∫°n
                  </Text>

                  {moodData.foods.map((food, index) => (
                     <Animated.View
                        key={index}
                        style={[
                           styles.foodCard,
                           animatedCardStyle,
                           { animationDelay: index * 200 },
                        ]}
                     >
                        <Image source={{ uri: food.image }} style={styles.foodImage} />
                        <View style={styles.foodContent}>
                           <Text style={styles.foodName}>{food.name}</Text>
                           <Text style={styles.foodDescription}>{food.description}</Text>
                           <View style={styles.foodTags}>
                              {food.tags.map((tag, tagIndex) => (
                                 <View key={tagIndex} style={styles.tag}>
                                    <Text style={styles.tagText}>{tag}</Text>
                                 </View>
                              ))}
                           </View>
                        </View>
                     </Animated.View>
                  ))}
               </View>

               {/* Action Buttons */}
               <View style={styles.actionsContainer}>
                  <TouchableOpacity style={styles.primaryButton} onPress={onClose}>
                     <Ionicons name="restaurant" size={20} color="white" />
                     <Text style={styles.primaryButtonText}>Kh√°m ph√° m√≥n ƒÉn</Text>
                  </TouchableOpacity>

                  <TouchableOpacity style={styles.secondaryButton} onPress={onTryAgain}>
                     <Ionicons name="refresh" size={20} color="#8B5CF6" />
                     <Text style={styles.secondaryButtonText}>Th·ª≠ l·∫°i</Text>
                  </TouchableOpacity>
               </View>
            </Animated.View>
         </ScrollView>
      </View>
   )
}

const styles = StyleSheet.create({
   container: {
      flex: 1,
      backgroundColor: '#F9FAFB',
   },
   scrollView: {
      flex: 1,
   },
   content: {
      padding: 20,
   },
   header: {
      alignItems: 'center',
      marginBottom: 24,
   },
   headerTitle: {
      fontSize: 24,
      fontWeight: 'bold',
      color: '#111827',
      marginBottom: 8,
   },
   headerSubtitle: {
      fontSize: 16,
      color: '#6B7280',
      textAlign: 'center',
   },
   moodCard: {
      backgroundColor: 'white',
      borderRadius: 16,
      padding: 24,
      alignItems: 'center',
      marginBottom: 24,
      shadowColor: '#000',
      shadowOffset: { width: 0, height: 2 },
      shadowOpacity: 0.1,
      shadowRadius: 8,
      elevation: 4,
   },
   moodIcon: {
      width: 80,
      height: 80,
      borderRadius: 40,
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 16,
   },
   moodEmoji: {
      fontSize: 40,
   },
   moodTitle: {
      fontSize: 20,
      fontWeight: 'bold',
      color: '#111827',
      marginBottom: 8,
      textAlign: 'center',
   },
   moodDescription: {
      fontSize: 16,
      color: '#6B7280',
      textAlign: 'center',
      lineHeight: 22,
   },
   recommendationsSection: {
      marginBottom: 24,
   },
   sectionTitle: {
      fontSize: 20,
      fontWeight: 'bold',
      color: '#111827',
      marginBottom: 8,
   },
   sectionSubtitle: {
      fontSize: 14,
      color: '#6B7280',
      marginBottom: 16,
      lineHeight: 20,
   },
   foodCard: {
      backgroundColor: 'white',
      borderRadius: 12,
      marginBottom: 16,
      overflow: 'hidden',
      shadowColor: '#000',
      shadowOffset: { width: 0, height: 1 },
      shadowOpacity: 0.05,
      shadowRadius: 4,
      elevation: 2,
   },
   foodImage: {
      width: '100%',
      height: 160,
   },
   foodContent: {
      padding: 16,
   },
   foodName: {
      fontSize: 18,
      fontWeight: 'bold',
      color: '#111827',
      marginBottom: 8,
   },
   foodDescription: {
      fontSize: 14,
      color: '#6B7280',
      marginBottom: 12,
      lineHeight: 20,
   },
   foodTags: {
      flexDirection: 'row',
      flexWrap: 'wrap',
   },
   tag: {
      backgroundColor: '#F3F4F6',
      paddingHorizontal: 8,
      paddingVertical: 4,
      borderRadius: 12,
      marginRight: 8,
      marginBottom: 4,
   },
   tagText: {
      fontSize: 12,
      color: '#374151',
      fontWeight: '500',
   },
   actionsContainer: {
      gap: 12,
   },
   primaryButton: {
      backgroundColor: '#8B5CF6',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      paddingVertical: 16,
      borderRadius: 12,
   },
   primaryButtonText: {
      fontSize: 16,
      fontWeight: '600',
      color: 'white',
      marginLeft: 8,
   },
   secondaryButton: {
      backgroundColor: 'white',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      paddingVertical: 16,
      borderRadius: 12,
      borderWidth: 1,
      borderColor: '#E5E7EB',
   },
   secondaryButtonText: {
      fontSize: 16,
      fontWeight: '600',
      color: '#8B5CF6',
      marginLeft: 8,
   },
}) 